[0m[[0minfo[0m] [0m[32mAnagramsSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- wordOccurrences: abcd[0m[0m
[0m[[0minfo[0m] [0m[32m- wordOccurrences: Robert[0m[0m
[0m[[0minfo[0m] [0m[32m- sentenceOccurrences: abcd e[0m[0m
[0m[[0minfo[0m] [0m[32m- dictionaryByOccurrences.get: eat[0m[0m
[0m[[0minfo[0m] [0m[32m- word anagrams: married[0m[0m
[0m[[0minfo[0m] [0m[32m- word anagrams: player[0m[0m
[0m[[0minfo[0m] [0m[32m- subtract: lard - r[0m[0m
[0m[[0minfo[0m] [0m[32m- combinations: [][0m[0m
[0m[[0minfo[0m] [0m[32m- combinations: abba[0m[0m
[0m[[0minfo[0m] [0m[32m- sentence anagrams: [][0m[0m
[0m[[0minfo[0m] [0m[31m- sentence anagrams: Linux rulez *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  Set(List()) did not equal Set(List(Rex, Lin, Zulu), List(Linux, rulez), List(nil, Zulu, Rex), List(Rex, nil, Zulu), List(Zulu, Rex, Lin), List(null, Uzi, Rex), List(rulez, Linux), List(Rex, Zulu, Lin), List(Uzi, null, Rex), List(Rex, null, Uzi), List(null, Rex, Uzi), List(Lin, Rex, Zulu), List(nil, Rex, Zulu), List(Rex, Uzi, null), List(Rex, Zulu, nil), List(Zulu, Rex, nil), List(Zulu, Lin, Rex), List(Lin, Zulu, Rex), List(Uzi, Rex, null), List(Zulu, nil, Rex)) (AnagramsSuite.scala:103)[0m[0m
